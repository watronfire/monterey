# Main entrypoint of the workflow.
configfile: "config/config.yaml"

# Calculate pairs here
with open( "resources/pairs.txt", "r" ) as pair_file:
    PAIRS = dict()
    JS_PAIRS = dict()
    for line in pair_file:
        pair = line.strip().split( "," )
        short_name = line.strip().replace( ",", "-" ).replace( " ", "" )
        PAIRS[short_name] = pair
        if pair[0] != pair[1]:
            JS_PAIRS[short_name] = pair


rule all:
    input:
        #nulls = expand( "results/trees/null_{num}.tree", num=range(1,11) ),
        #pruned_null_trees = expand( "results/trees/{pair}/{pair}.null.{num}.tree", pair=PAIRS, num=range(1,11) ),
        #pruned_actual_trees= expand( "results/trees/{pair}/{pair}.actual.{num}.tree", pair=PAIRS, num=[1] ),
        #results_nulls = expand( "results/phylosor/{pair}/{pair}.null.{num}.csv", pair=PAIRS, num=range(1,11) ),
        #results_actual = expand( "results/phylosor/{pair}/{pair}.actual.{num}.csv", pair=PAIRS, num=range(1,11) ),
        #results_combined = "results/output/phylosor_results.csv",
        js_results = expand( "results/js/{pair}.js.csv", pair=JS_PAIRS ),
        results_nulls = expand( "results/phylosor_newnull/{pair}/{pair}.null.{num}.csv", pair=PAIRS, num=range(1,11) ),
        results_actual = expand( "results/phylosor_newnull/{pair}/{pair}.actual.{num}.csv", pair=PAIRS, num=[1] ),
        results_combined = "results/output/phylosor_newnull_results.csv",
        phylosor_plot = expand( "results/phylosor_plot/{pair}.phylosor.pdf", pair=PAIRS )

# Include support functions for pipeline
include: "rules/support.smk"

# Include phylosor rules for pipeline
include: "rules/phylosor.smk"
#include: "rules/phylosor_newnull.smk"

# Include jensen-shannon rules
include: "rules/jensenshannon.smk"
